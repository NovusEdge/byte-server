package wbyte

import (
	"fmt"
	"log"
	"os"
	"time"
)

// Loggers for different purposes.
// All logfiles are stored in the logs/ directory.
var (
	// InfoLogger logs information generated by the ByteServer.
	// logfile for InfoLogger: info-[date].log
	InfoLogger *log.Logger

	// WarningLogger logs the warnings generated by ByteServer
	// logfile for WarningLogger: warnings-[date].log
	WarningLogger *log.Logger

	// ErrorLogger logs errors generated by the ByteServer
	// logfile for ErrorLogger: errors-[date].log
	ErrorLogger *log.Logger
)

// InitLogging method initializes all loggers for the server to use while it
// runs.
func InitLogging() {
	dt := time.Now().Format("01-02-2006")
	infoFileName := fmt.Sprintf("logs/info-%s.log", dt)
	warningFileName := fmt.Sprintf("logs/warnings-%s.log", dt)
	errorFileName := fmt.Sprintf("logs/errors-%s.log", dt)

	infoFile, err := os.OpenFile(infoFileName, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0666)
	if err != nil {
		log.Fatal(err)
	}

	warnFile, err := os.OpenFile(warningFileName, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0666)
	if err != nil {
		log.Fatal(err)
	}

	errorFile, err := os.OpenFile(errorFileName, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0666)
	if err != nil {
		log.Fatal(err)
	}

	InfoLogger = log.New(infoFile, "INFO: ", log.Ldate|log.Ltime|log.Lshortfile)
	WarningLogger = log.New(warnFile, "WARNING: ", log.Ldate|log.Ltime|log.Lshortfile)
	ErrorLogger = log.New(errorFile, "ERROR: ", log.Ldate|log.Ltime|log.Lshortfile)
}

// LogInfo logs information generated by the server.
func (bs *ByteServer) LogInfo(info string) {
	InfoLogger.Println(info)
}

// LogWarning logs a warning generated by the server.
func (bs *ByteServer) LogWarning(warning string) {
	WarningLogger.Println(warning)
}

// LogError logs an error generated by the server.
func (bs *ByteServer) LogError(err error) {
	ErrorLogger.Println(err)
}

// PrintInfo prints information generated by the server to console.
func (bs *ByteServer) PrintInfo(info string) {
	fmt.Printf("%s[I]: %s%s\n", DimColorBlue, info, ColorReset)
}

// PrintWarning prints warnings generated by the server to console.
func (bs *ByteServer) PrintWarning(warning string) {
	fmt.Printf("%s[W]: %s%s\n", ColorYellow, warning, ColorReset)
}

// PrintError prints errors generated by the server to console.
func (bs *ByteServer) PrintError(err error) {
	fmt.Printf("%s[E]: %v%s\n", BoldColorRed, err, ColorReset)
}
